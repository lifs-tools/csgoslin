<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>

    <IsPackable>false</IsPackable>
    <XunitConsole Condition=" '$(OS)' == 'Windows_NT' ">&quot;$(XunitConsole472Path)&quot;</XunitConsole>
    <XunitConsole Condition=" '$(OS)' != 'Windows_NT' ">mono &quot;$(XunitConsole472Path)&quot;</XunitConsole>	    
  </PropertyGroup>

  <ItemGroup>
    <!-- setup for Windows -->
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.11.0" Condition=" '$(OS)' == 'Windows_NT' " />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3" Condition=" '$(OS)' == 'Windows_NT' " />
    <!-- setup for Linux --> 
    <PackageReference
        Include="Microsoft.NETFramework.ReferenceAssemblies"
        Version="1.0.2"
        Condition=" '$(TargetFrameworkIdentifier)' == '.NETFramework' AND '$(OS)' != 'Windows_NT' ">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>	  
    <PackageReference Include="xunit.runner.console" Version="2.4.1" Condition=" '$(OS)' != 'Windows_NT' ">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!-- platform independent -->
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.assert" Version="2.4.1" />
    <PackageReference Include="coverlet.collector" Version="3.1.1">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\csgoslin\csgoslin.csproj" />
  </ItemGroup>

  <!-- add test target, run with dotnet build -t:Test -->	  
  <Target Name="Test" DependsOnTargets="Build">
    <Exec
      Command="$(XunitConsole) $(TargetFileName)"
      WorkingDirectory="$(TargetDir)" />
  </Target>	  

</Project>
